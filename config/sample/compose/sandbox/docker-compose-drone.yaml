version: '2.4'

services:
  goupf:
    container_name: goupf
    image: ${REPO}/free5gc-go-upf:${TAG} 
    command: sh -c " iptables -A FORWARD -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 1400 && iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE && ./go-upf"
    volumes:
      - ${SANDBOX_DIR}/goupfcfg.yaml:/free5gc/config/goupfcfg.yaml
      - ./share_host_container:/share_host_container
    ports:
    - "2152:2152/udp"
    cap_add:
      - NET_ADMIN
    networks:
      privnet:
        aliases:
          - goupf.free5gc.org
        ipv4_address: ${GO_UPF_IP}
    depends_on:
      nrf1:
        condition: service_healthy

  db:
    container_name: mongodb
    image: mongo:4.4
    command: mongod --port 27017
    expose:
      - "27017"
    ports:
      - "27017:27017"
    volumes:
      - dbdata:/data/db
    networks:
      privnet:
        aliases:
          - db
    healthcheck:
      test: ["CMD", "mongo", "localhost:27017/free5gc",  "--eval" , "'db.getCollectionNames()'"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  nrf1:
    container_name: nrf
    image: ${REPO}/free5gc-nrf:${TAG}
    command: ./nrf
    expose:
      - "8000"
    volumes:
      - ${SANDBOX_DIR}/nrfcfg.yaml:/free5gc/config/nrfcfg.yaml
    environment:
      DB_URI: mongodb://db/free5gc
      GIN_MODE: release
    networks:
      privnet:
        aliases:
          - nrf.free5gc.org
        ipv4_address: ${NRF_IP}
    healthcheck:
      test: ["CMD", "curl", "${NRF_IP}:8000"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s   
    depends_on:
      db:
        condition: service_healthy

  amf1:
    container_name: amf
    image: ${REPO}/free5gc-amf:${TAG}
    command: ./amf
    expose:
      - "8000"
 #     - "38412/sctp"
    volumes:
      - ${SANDBOX_DIR}/amfcfg.yaml:/free5gc/config/amfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      privnet:
        aliases:
          - amf.free5gc.org
        ipv4_address: ${AMF_IP}
    ports:
      - "38412:38412/sctp"
    healthcheck:
      test: ["CMD", "netstat", "--sctp",  "|" , "grep 38412"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      nrf1:
        condition: service_healthy

  ausf1:
    container_name: ausf
    image: ${REPO}/free5gc-ausf:${TAG}
    command: ./ausf
    expose:
      - "8000"
    volumes:
      - ${SANDBOX_DIR}/ausfcfg.yaml:/free5gc/config/ausfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      privnet:
        aliases:
          - ausf.free5gc.org
        ipv4_address: ${AUSF_IP}
    depends_on:
      nrf1:
        condition: service_healthy

  nssf1:
    container_name: nssf
    image: ${REPO}/free5gc-nssf:${TAG}
    command: ./nssf
    expose:
      - "8000"
    volumes:
      - ${SANDBOX_DIR}/nssfcfg.yaml:/free5gc/config/nssfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      privnet:
        aliases:
          - nssf.free5gc.org
        ipv4_address: ${NSSFS_IP}
    depends_on:
      nrf1:
        condition: service_healthy

  pcf1:
    container_name: pcf
    image: ${REPO}/free5gc-pcf:${TAG}
    command: ./pcf
    expose:
      - "8000"
    volumes:
      - ${SANDBOX_DIR}/pcfcfg.yaml:/free5gc/config/pcfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      privnet:
        aliases:
          - pcf.free5gc.org
        ipv4_address: ${PCF_IP}
    depends_on:
      nrf1:
        condition: service_healthy

  smf1:
    container_name: smf
    image: ${REPO}/free5gc-smf:${TAG}
    command: ./smf
    expose:
      - "8000"
    volumes:
      - ${SANDBOX_DIR}/smfcfg.yaml:/free5gc/config/smfcfg.yaml
      - ${SANDBOX_DIR}/uerouting.yaml:/free5gc/config/uerouting.yaml
    environment:
      GIN_MODE: release
    networks:
      privnet:
        aliases:
          - smf.free5gc.org
        ipv4_address: ${SMF_IP}
    depends_on:
      nrf1:
        condition: service_healthy
      goupf:
        condition: service_started 

  udm1:
    container_name: udm
    image: ${REPO}/free5gc-udm:${TAG}
    command: ./udm
    expose:
      - "8000"
    volumes:
      - ${SANDBOX_DIR}/udmcfg.yaml:/free5gc/config/udmcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      privnet:
        aliases:
          - udm.free5gc.org
        ipv4_address: ${UDM_IP}
    depends_on:
      db:
        condition: service_healthy
      nrf1:
        condition: service_healthy

  udr1:
    container_name: udr
    image: ${REPO}/free5gc-udr:${TAG}
    command: ./udr -c ./config/udrcfg.yaml
    expose:
      - "8000"
    volumes:
      - ${SANDBOX_DIR}/udrcfg.yaml:/free5gc/config/udrcfg.yaml
    environment:
      DB_URI: mongodb://db/free5gc
      GIN_MODE: release
    networks:
      privnet:
        aliases:
          - udr.free5gc.org
        ipv4_address: ${UDR_IP}
    depends_on:
      db:
        condition: service_healthy
      nrf1:
        condition: service_healthy

  n3iwf1:
    container_name: n3iwf
    image: ${REPO}/free5gc-n3iwf:${TAG}
    command: sh -c "./n3iwf-ipsec.sh"
    volumes:
      - ${SANDBOX_DIR}/n3iwfs/n3iwf1/config/n3iwfcfg.yaml:/free5gc/config/n3iwfcfg.yaml
      - ${SANDBOX_DIR}/n3iwfs/n3iwf1/config/n3iwf-ipsec.sh:/free5gc/n3iwf/n3iwf-ipsec.sh
    environment:
      GIN_MODE: release
    cap_add:
      - NET_ADMIN
    networks:
      privnet:
        aliases:
          - n3iwf.free5gc.org
        ipv4_address: ${N3IWF_IP}
    depends_on:
      amf1:
        condition: service_healthy
      smf1:
        condition: service_started
      goupf:
        condition: service_started


networks:
  privnet:
    ipam:
      driver: default
      config:
        - subnet: 10.100.200.0/24
  n3network:
    external:
      name: n3network
  n6network:
    external:
      name: n6network
  n7network:
    external:
      name: n7network
  n9network:
    external:
      name: n9network

volumes:
  dbdata:
